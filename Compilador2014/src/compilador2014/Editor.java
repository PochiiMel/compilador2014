/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package compilador2014;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import sintactico.Sintactico;
import sintaxis.JEditTextArea;
import sintaxis.CCTokenMarker;
import com.sun.java.swing.plaf.windows.WindowsLookAndFeel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
/**
 *
 * @author william
 */
public class Editor extends javax.swing.JFrame {

    /**
     * Creates new form Editor
     */
    public Editor() {
        initComponents();
        Editor = new sintaxis.JEditTextArea();
        CCTokenMarker tkmaker = new CCTokenMarker();
        Editor.setTokenMarker(tkmaker);
        jTabbedPane2.add(Editor,"Untitled");
        nombreArchivo = null;
        titulo = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CMINUS compiler");
        setBounds(new java.awt.Rectangle(100, 100, 100, 100));
        setExtendedState(MAXIMIZED_BOTH);

        jSplitPane1.setDividerLocation(50);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jTabbedPane2.setAlignmentX(10.0F);
        jTabbedPane2.setAlignmentY(10.0F);
        jTabbedPane2.setAutoscrolls(true);
        jTabbedPane2.setPreferredSize(getMinimumSize());
        jSplitPane1.setTopComponent(jTabbedPane2);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jSplitPane1.setBottomComponent(jScrollPane2);

        jMenu2.setText("Archivo");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Abrir");
        jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem1MousePressed(evt);
            }
        });
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Guardar");
        jMenuItem2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem2MousePressed(evt);
            }
        });
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar2.add(jMenu2);

        jMenu1.setText("Compilar");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar2.add(jMenu1);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 742, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MousePressed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(rootPane);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File f = fc.getSelectedFile();
            nombreArchivo = f.getPath();
            titulo = f.getName();
            try{
                FileReader archivo = new FileReader(nombreArchivo);
                BufferedReader buffer = new BufferedReader(archivo);
                buff = new char[1000];
                String contenido = "";
                try{
                    int leidos = buffer.read(buff);
                    for(int i = 0; i < leidos; i++){
                        contenido += buff[i];
                        
                    }
                    Editor.setText(contenido);
                    jTabbedPane2.setTitleAt(0, titulo);
                }catch(java.io.IOException e){
                    JOptionPane.showMessageDialog(rootPane, "No se pudo leer el archivo");
                }
            }catch(java.io.FileNotFoundException e){
                JOptionPane.showMessageDialog(rootPane, "No se pudo abrir el archivo");
            }
        }
    }//GEN-LAST:event_jMenuItem1MousePressed

    private void jMenuItem2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem2MousePressed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        if(nombreArchivo!=null){
            /*File fl = new File(nombreArchivo);
            fc.setCurrentDirectory(fl);
            fc.setSelectedFile(fl);*/
            try{
                FileWriter writer = new FileWriter(nombreArchivo);
                BufferedWriter bw = new BufferedWriter(writer);
                bw.write(Editor.getText());
                bw.close();
            }catch(java.io.IOException e){
                JOptionPane.showMessageDialog(rootPane,"No se puede guardar el archivo");
            }
        }else{
            int returnVal = fc.showSaveDialog(null);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File s = fc.getSelectedFile();
                 nombreArchivo = s.getPath();
                 titulo = s.getName();
                 try{
                    FileWriter writer = new FileWriter(nombreArchivo);
                    BufferedWriter bw = new BufferedWriter(writer);
                    bw.write(Editor.getText());
                    bw.close();
                    jTabbedPane2.setTitleAt(0, titulo);
                 }catch(java.io.IOException e){
                     JOptionPane.showMessageDialog(rootPane,"No se puede guardar el archivo");
                 }
            }
        }
        
    }//GEN-LAST:event_jMenuItem2MousePressed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        boolean cambios = true;
        String contenidoEditor  = Editor.getText();
        String contenidoArchivo = "";
        
        if(nombreArchivo != null){
            try{
                    FileReader archivo = new FileReader(nombreArchivo);
                    BufferedReader buffer = new BufferedReader(archivo);
                    buff = new char[1000];
                    String contenido = "";
                    try{
                        int leidos = buffer.read(buff);
                        for(int i = 0; i < leidos; i++){
                            contenido += buff[i];   
                        }
                        contenidoArchivo = contenido;
                    }catch(java.io.IOException e){
                        JOptionPane.showMessageDialog(rootPane, "No se pudo leer el archivo");
                    }
            }catch(java.io.FileNotFoundException e){
                    JOptionPane.showMessageDialog(rootPane, "No se pudo abrir el archivo");
            }
        }
        if(contenidoArchivo.equals(contenidoEditor)) cambios = false;
        
        if( (nombreArchivo == null) || cambios){
            JOptionPane.showMessageDialog(rootPane,"Primero debe guardar el archivo");
        }else{
            // Inicia el proceso de compilacion
            Sintactico analizadorSintactico = new Sintactico(nombreArchivo,titulo);
            analizadorSintactico.establecerSalidaErrores(jTextArea2);
            analizadorSintactico.limipiarSalidaErrores();
            analizadorSintactico.iniciarAnalisis();
        }
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
         JFileChooser fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(rootPane);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File f = fc.getSelectedFile();
            nombreArchivo = f.getPath();
            titulo = f.getName();
            try{
                FileReader archivo = new FileReader(nombreArchivo);
                BufferedReader buffer = new BufferedReader(archivo);
                buff = new char[1000];
                String contenido = "";
                try{
                    int leidos = buffer.read(buff);
                    for(int i = 0; i < leidos; i++){
                        contenido += buff[i];
                        
                    }
                    Editor.setText(contenido);
                    jTabbedPane2.setTitleAt(0, titulo);
                }catch(java.io.IOException e){
                    JOptionPane.showMessageDialog(rootPane, "No se pudo leer el archivo");
                }
            }catch(java.io.FileNotFoundException e){
                JOptionPane.showMessageDialog(rootPane, "No se pudo abrir el archivo");
            }
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        if(nombreArchivo!=null){
            /*File fl = new File(nombreArchivo);
            fc.setCurrentDirectory(fl);
            fc.setSelectedFile(fl);*/
            try{
                FileWriter writer = new FileWriter(nombreArchivo);
                BufferedWriter bw = new BufferedWriter(writer);
                bw.write(Editor.getText());
                bw.close();
            }catch(java.io.IOException e){
                JOptionPane.showMessageDialog(rootPane,"No se puede guardar el archivo");
            }
        }else{
            int returnVal = fc.showSaveDialog(null);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File s = fc.getSelectedFile();
                 nombreArchivo = s.getPath();
                 titulo = s.getName();
                 try{
                    FileWriter writer = new FileWriter(nombreArchivo);
                    BufferedWriter bw = new BufferedWriter(writer);
                    bw.write(Editor.getText());
                    bw.close();
                    jTabbedPane2.setTitleAt(0, titulo);
                 }catch(java.io.IOException e){
                     JOptionPane.showMessageDialog(rootPane,"No se puede guardar el archivo");
                 }
            }
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        try{
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }catch (UnsupportedLookAndFeelException e) {
       // handle exception
        }catch (ClassNotFoundException e) {
           // handle exception
        }catch (InstantiationException e) {
           // handle exception
        }catch (IllegalAccessException e) {
           // handle exception
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
    private sintaxis.JEditTextArea Editor;
    private char[] buff;
    String nombreArchivo;
    String titulo;
}
